/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import classes.Combos;
import classes.Constans;
import classes.ControlDatos;
import classes.ModeloDatos;
import classes.RepAnexo;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emman
 */
public class BuscadorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form BuscadorJFrame
     */
    public BuscadorJFrame() {
        initComponents();
        new Combos().comboYears(jComboBoxAnios);
        jComboBoxFuentes.setEnabled(false);
        jComboBoxMpios.setEnabled(false);
        btnBuscar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnexos = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        jComboBoxMpios = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxFuentes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxAnios = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnGenPdf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tblAnexos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblAnexosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblAnexos);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jComboBoxMpios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxMpios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMpiosActionPerformed(evt);
            }
        });

        jLabel3.setText("Municipio:");

        jComboBoxFuentes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxFuentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFuentesActionPerformed(evt);
            }
        });

        jLabel2.setText("Fuente:");

        jComboBoxAnios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAnios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAniosActionPerformed(evt);
            }
        });

        jLabel1.setText("Ejercicio:");

        btnGenPdf.setText("Generar PDF");
        btnGenPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenPdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGenPdf)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxMpios, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jComboBoxAnios, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jComboBoxFuentes, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAnios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFuentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxMpios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenPdf)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxAniosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAniosActionPerformed
        jComboBoxAnios.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  if(jComboBoxAnios.getSelectedItem().toString().trim() != "Selecciona...") {
                    Constans.year = jComboBoxAnios.getSelectedItem().toString().trim();
                    new Combos().comboFtes(jComboBoxFuentes);
                    jComboBoxFuentes.setEnabled(true);
                  } else {
                      jComboBoxFuentes.setEnabled(false);
                      jComboBoxMpios.setEnabled(false);
                      btnBuscar.setEnabled(false);
                  }
            }    
        });
    }//GEN-LAST:event_jComboBoxAniosActionPerformed

    private void jComboBoxMpiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMpiosActionPerformed
        jComboBoxMpios.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jComboBoxMpios.getSelectedItem() != null) {
                  if(!"Selecciona...".equals(jComboBoxMpios.getSelectedItem().toString().trim())) {
                    Constans.mpio = jComboBoxMpios.getSelectedItem().toString().trim();
                    //new Combos().comboFtes(jComboBoxFuentes);
                    btnBuscar.setEnabled(true);
                  } else btnBuscar.setEnabled(false);
            }    
            }
        });
    }//GEN-LAST:event_jComboBoxMpiosActionPerformed

    private void jComboBoxFuentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFuentesActionPerformed
        jComboBoxFuentes.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(jComboBoxFuentes.getSelectedItem() != null) {
                  if(!"Selecciona...".equals(jComboBoxFuentes.getSelectedItem().toString().trim())) {
                    Constans.fte = jComboBoxFuentes.getSelectedItem().toString().trim();
                    new Combos().comboMpios(jComboBoxMpios);
                    jComboBoxMpios.setEnabled(true);
                  } else 
                      jComboBoxMpios.setEnabled(false);
            }
            }
        });
    }//GEN-LAST:event_jComboBoxFuentesActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        llenarTabla();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGenPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenPdfActionPerformed
        btnGenPdf.setEnabled(false);
        int filaSelected;
        try {
                  filaSelected = tblAnexos.getSelectedRow();
                  if(filaSelected == -1) {
                           JOptionPane.showMessageDialog(null, "Aún No Se A Seleccionado un Anexo");
                           Constans.AE = "";
                  } else {
                           DefaultTableModel modeloTabla = (DefaultTableModel) tblAnexos.getModel();
                           Constans.AE = (String) modeloTabla.getValueAt(filaSelected, 2);
                           JFileChooser file = new JFileChooser();
                           file.getCurrentDirectory();
                           file.addChoosableFileFilter(new FileNameExtensionFilter("Todos los Archivos *.PDF", "pdf", "PDF"));
                           int select = file.showSaveDialog(null);
                           
                           if(select == JFileChooser.APPROVE_OPTION) {
                               File save = file.getSelectedFile();
                               String rute = save.getAbsolutePath();
                               String name = save.getName();
                               
                                    try {
                                             if(new RepAnexo().genPdf(rute, name)) {
                                                      JOptionPane.showMessageDialog(null, "PDF Generado Con Exito!");
                                                      btnGenPdf.setEnabled(true);
                                             } else {
                                                      JOptionPane.showMessageDialog(null, "Error: No Fue Posible Generar el Archivo!", " .::Error En la Operacion::." ,JOptionPane.ERROR_MESSAGE);
                                                      btnGenPdf.setEnabled(true);
                                             }
                                    } catch (IOException ex) {
                                            JOptionPane.showMessageDialog(null, "Error: "+ex+"\nInténtelo nuevamente", " .::Error En la Operacion::." ,JOptionPane.ERROR_MESSAGE);
                                    }
                               
                           } else {
                                    JOptionPane.showMessageDialog(null, "Error: No se selecciono el destino del archivo!", " .::Error En la Operacion::." ,JOptionPane.ERROR_MESSAGE);
                                    btnGenPdf.setEnabled(true);
                           }
                  }
        } catch(HeadlessException ex) {
                  JOptionPane.showMessageDialog(null, "Error: "+ex+"\nInténtelo nuevamente", " .::Error En la Operacion::." ,JOptionPane.ERROR_MESSAGE);
        }
        
        System.out.println("Anexo: "+Constans.AE);
    }//GEN-LAST:event_btnGenPdfActionPerformed

    private void tblAnexosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAnexosMousePressed
        //
    }//GEN-LAST:event_tblAnexosMousePressed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscadorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscadorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscadorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscadorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscadorJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenPdf;
    private javax.swing.JComboBox<String> jComboBoxAnios;
    private javax.swing.JComboBox<String> jComboBoxFuentes;
    private javax.swing.JComboBox<String> jComboBoxMpios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAnexos;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
         DefaultTableModel tabla = new DefaultTableModel();
         ControlDatos control = new ControlDatos();
         ArrayList<ModeloDatos> datos;
         String[] fila = new String[4];
         
         tabla.addColumn("Fuente");
         tabla.addColumn("Municipio");
         tabla.addColumn("Numero Anexo");
         tabla.addColumn("Numero Convenio");
         
         datos = control.llenarDatos();
         
         for(int f = 0; f < datos.size(); f++) {
             fila[0] = datos.get(f).getFte().toString();
             fila[1] = datos.get(f).getMpio().toString();
             fila[2] = datos.get(f).getNumAE().toString();
             fila[3] = datos.get(f).getNumCon().toString();
             tabla.addRow(fila);
         }
         tblAnexos.setModel(tabla);
    }
}
